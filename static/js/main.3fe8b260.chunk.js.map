{"version":3,"sources":["components/Jumbotron/Jumbotron.js","components/Memory/memory.js","components/MainContainer/MainContainer.js","App.js","index.js"],"names":["Jumbotron","react_default","a","createElement","className","MemoryCard","props","key","id","onClick","handleClick","clicked","name","src","image","alt","MainContainer","state","images","message","score","topScore","imageOrder","_this","forEach","index","setState","sort","Math","random","_this$state","newScore","newTopScore","_this2","this","map","Memory_memory","Component","App","components_Jumbotron_Jumbotron","components_MainContainer_MainContainer","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"w7DAgBeA,SARG,kBAClBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,sBACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,oHCKWC,SAdI,SAAAC,GAAK,OACvBL,EAAAC,EAAAC,cAAA,OACAC,UAAU,wDACVG,IAAKD,EAAME,GACXC,QAAS,kBAAMH,EAAMI,YAAYJ,EAAME,GAAIF,EAAMK,WAEhDV,EAAAC,EAAAC,cAAA,OACAK,GAAIF,EAAMM,KACVC,IAAKP,EAAMQ,MACXC,IAAKT,EAAMM,iBCiEEI,oNAvEdC,MAAQ,CACPC,SACAC,QAAS,wCACTC,MAAO,EACPC,SAAU,KAGXX,YAAc,SAACF,EAAIG,GAElB,IAAMW,EAAaC,EAAKN,MAAMC,OAE9B,GAAIP,EAIH,OAHAW,EAAWE,QAAQ,SAACV,EAAOW,GAC1BH,EAAWG,GAAOd,SAAU,IAEtBY,EAAKG,SAAS,CACpBZ,MAAOQ,EAAWK,KAAK,kBAAMC,KAAKC,SAAW,KAC7CV,QAAS,2BACTC,MAAO,IAIRE,EAAWE,QAAQ,SAACV,EAAOW,GACtBjB,IAAOM,EAAMN,KAChBc,EAAWG,GAAOd,SAAU,KAH1B,IAAAmB,EAOwBP,EAAKN,MAAzBI,EAPJS,EAOIT,SACFU,EARFD,EAOcV,MACO,EACnBY,EAAcD,EAAWV,EAAWU,EAAWV,EAErD,OAAOE,EAAKG,SAAS,CACpBZ,MAAOQ,EAAWK,KAAK,kBAAMC,KAAKC,SAAW,KAC7CV,QAAS,yBACTC,MAAOW,EACPV,SAAUW,6EAKJ,IAAAC,EAAAC,KACR,OACCjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACZH,EAAAC,EAAAC,cAAA,SAAI+B,KAAKjB,MAAME,UAEhBlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACdH,EAAAC,EAAAC,cAAA,mBAAW+B,KAAKjB,MAAMG,MAAtB,iBAA2Cc,KAAKjB,MAAMI,WAExDpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACd8B,KAAKjB,MAAMC,OAAOiB,IAAI,SAAArB,GAAK,OAC3Bb,EAAAC,EAAAC,cAACiC,EAAD,CACC7B,IAAKO,EAAMN,GACXA,GAAIM,EAAMN,GACVI,KAAME,EAAMF,KACZD,QAASG,EAAMH,QACfG,MAAOA,EAAMA,MACbJ,YAAauB,EAAKvB,0BA7DG2B,cCQbC,SAPH,kBACVrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACbH,EAAAC,EAAAC,cAACoC,EAAD,MACAtC,EAAAC,EAAAC,cAACqC,EAAD,eCJJC,IAASC,OAAOzC,EAAAC,EAAAC,cAACwC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.3fe8b260.chunk.js","sourcesContent":["\n\n\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\nimport React from 'react';\nimport \"./style.css\";\n\n\nconst Jumbotron = () => (\n<div className=\"jumbotron jumbotron-fluid\">\n  <div className=\"container text-center\">\n    <h1 className=\"display-4\">React Clicky Game!</h1>\n    <p className=\"lead\">Click on any image to earn points, but don't click on any more than once!</p>\n  </div>\n</div>\n);\nexport default Jumbotron;","import React from 'react';\r\nimport \"./memory.css\";\r\n\r\nconst MemoryCard = props => (\r\n\t<div \r\n\tclassName=\"allCards col-xs-6 col-sm-6 col-md-4 col-lg-3 col-xl-3\" \r\n\tkey={props.id}\r\n\tonClick={() => props.handleClick(props.id, props.clicked)}\r\n\t>\r\n\t\t<img \r\n\t\tid={props.name}\r\n\t\tsrc={props.image}\r\n\t\talt={props.name}\r\n\t\t/>\r\n\t</div>\r\n);\r\n\r\nexport default MemoryCard;","import React, { Component } from 'react';\r\nimport MemoryCard from '../Memory';\r\nimport images from \"../../images.json\";\r\nimport \"./char.css\";\r\n\r\nclass MainContainer extends Component {\r\n\tstate = {\r\n\t\timages,\r\n\t\tmessage: \"Click one of the Characters to begin!\",\r\n\t\tscore: 0,\r\n\t\ttopScore: 0\r\n\t};\r\n\t\r\n\thandleClick = (id, clicked) => {\r\n\r\n\t\tconst imageOrder = this.state.images;\r\n\r\n\t\tif (clicked) {\r\n\t\t\timageOrder.forEach((image, index) => {\r\n\t\t\t\timageOrder[index].clicked = false;\r\n\t\t\t});\r\n\t\t\treturn this.setState({\r\n\t\t\t\timage: imageOrder.sort(() => Math.random() - 0.5),\r\n\t\t\t\tmessage: \"You Guessed Incorrectly!\",\r\n\t\t\t\tscore: 0\r\n\t\t\t})\r\n\t\t}\r\n\t\telse {\r\n\t\t\timageOrder.forEach((image, index) => {\r\n\t\t\t\tif (id === image.id) {\r\n\t\t\t\t\timageOrder[index].clicked = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tconst { topScore, score } = this.state;\r\n\t\t\tconst newScore = score + 1;\r\n\t\t\tconst newTopScore = newScore > topScore ? newScore : topScore;\r\n\r\n\t\t\treturn this.setState({\r\n\t\t\t\timage: imageOrder.sort(() => Math.random() - 0.5),\r\n\t\t\t\tmessage: \"You Guessed Correctly!\",\r\n\t\t\t\tscore: newScore,\r\n\t\t\t\ttopScore: newTopScore,\r\n\t\t\t})\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"container-fluid mainCardContainer\">\r\n\t\t\t<div className=\"gameMessage text-center\">\r\n\t\t\t\t\t\t<p>{this.state.message}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"gameScores text-center\">\r\n\t\t\t\t\t\t<p>Score: {this.state.score} | Top Score: {this.state.topScore}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t{this.state.images.map(image => (\r\n\t\t\t\t\t\t<MemoryCard\r\n\t\t\t\t\t\t\tkey={image.id}\r\n\t\t\t\t\t\t\tid={image.id}\r\n\t\t\t\t\t\t\tname={image.name}\r\n\t\t\t\t\t\t\tclicked={image.clicked}\r\n\t\t\t\t\t\t\timage={image.image}\r\n\t\t\t\t\t\t\thandleClick={this.handleClick}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default MainContainer;","import React from \"react\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport MainGameContainer from \"./components/MainContainer\";\nimport \"./App.css\";\n\n\nconst App = () => (\n  <div className=\"container-fluid mainContainer\">\n    <Jumbotron />\n    <MainGameContainer /> \n  </div>\n);\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}